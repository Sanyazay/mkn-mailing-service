version: '3.2'
networks:
  mynetwork:
    
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.3.2
    container_name: broker 
    ports:
    # To learn about configuring Kafka for access across networks see
    # https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc/
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  # zookeeper:
  #   image: wurstmeister/zookeeper
  #   container_name: zookeeper
  #   environment:
  #     - ALLOW_ANONYMOUS_LOGIN=yes
  #   ports:
  #     - "2181:2181"
  # broker:
  #   image: wurstmeister/kafka
  #   container_name: broker
  #   ports:
  #     - "9092:9092"
  #   environment:
  #     - KAFKA_BROKER_ID=1
  #     - KAFKA_LISTENERS=PLAINTEXT://:9092
  #     - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
  #     - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
  #     - ALLOW_PLAINTEXT_LISTENER=yes
  #     - KAFKA_CREATE_TOPICS=MailTopic:1:1
  #     - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
  #   depends_on:
  #     - zookeeper
  # zookeeper:
  #   image: 'wurstmeister/zookeeper:latest'
  #   ports:
  #     - '2181:2181'
  #   environment:
  #     - ALLOW_ANONYMOUS_LOGIN=yes
  # broker:
  #   image: 'wurstmeister/kafka:latest'
  #   ports:
  #     - '9092:9092'
  #   environment:
  #     - KAFKA_BROKER_ID=1
  #     - KAFKA_LISTENERS=PLAINTEXT://:9092
  #     - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092
  #     - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
  #     - ALLOW_PLAINTEXT_LISTENER=yes
  #     # - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
  #     - auto.create.topics.enable=true
  #   depends_on:
  #     - zookeeper
  redis:
    container_name: redis
    image: "redis:6.0-alpine"
    restart: always
    # entrypoint: redis-server
    command: redis-server /usr/local/etc/redis/redis.conf
    # networks:
    #   - mynetwork
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/var/lib/redis
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    # environment:
    #   - REDIS_HOST=redis
    #   - REDIS_PORT=6379
  backendredis:
    container_name: backendredis
    image: "redis:6.0-alpine"
    restart: always
    # entrypoint: redis-server
    command: redis-server /usr/local/etc/redis/redis.conf
    # networks:
    #   - mynetwork
    ports:
      - "6377:6377"
    volumes:
      - backendredis-data:/var/lib/redis
      - ./backend_redis/redis.conf:/usr/local/etc/redis/redis.conf
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      
    # environment:
    #   - REDIS_HOST=backendredis
    #   - REDIS_PORT=6377

  backend-mock:
    container_name: backend_mock
    build: backend_mock/
    command: python grpc-server-back.py &

  mail_service:
    container_name: mail_service
    build: mail_service/
    # entrypoint: python redistest.py tail -F anything
    command: tail -F anything
    # python grpc-server.py && python producer.py
    depends_on: [redis,broker]

      
volumes:
  redis-data:
  backendredis-data:
# broker:
#     image: wurstmeister/kafka
#     container_name: broker
#     ports:
#       - "9092:9092"
#     environment:
#       KAFKA_ADVERTISED_HOST_NAME: broker
#       KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#       KAFKA_CREATE_TOPICS: "MailTopic:1:1"
#       KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
#     depends_on:
#       - zookeeper
    